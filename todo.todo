---FRONTEND---
✔ Make basic frontend components like: Navbar, Header, Hero, Footer, etc. @done(25-05-28 14:57)
✔ Check if data from inputs gets valid in console.log @done(25-06-16 17:12)
✔ Use axios to fetch data from the backend, not fetch @done(25-06-16 18:04)
✔ Use Zustand for state management, not useState @done(25-06-16 17:44)
✔ Cookies, not localStorage! @done(25-06-16 18:03)
✔ After login, ask user in popup to enter his goals and parameters for trainings! Then, in /profile, it will be shown! But it will save in another database in PostgreSQL for params for every user! There, the id of user, and his params! @started(25-08-06 19:53) @done(25-08-06 19:53) @lasted(45s)
✔ Remade some design on /training page! @done(25-08-21 10:45)
✔ Make custom 404 page? @started(25-06-25 12:17) @done(25-06-25 12:22) @lasted(5m42s)
✔ Make Guard and Popup for unauthorized user if he wants to go to /trainings page! @started(25-06-25 12:30) @done(25-06-25 13:31) @lasted(1h1m1s)
✔ Make checkbox with Privacy Policy on registration page! @started(25-08-06 21:20) @done(25-08-06 21:36) @lasted(16m1s)
    There is the site what will be able to create a PP document for site!
✔ Clean .tsx files of some rubbish like: @done(25-07-30 20:27)
    const progressItems = [...]
✔ Delete guards from frontend part! @started(25-07-04 14:01) @done(25-07-04 14:02) @lasted(1m)
    ✔ When user goes to trainings, he needs to be redirected to login page! NO BLUR! It's unsafe! @done(25-08-04 17:45)
✔ Use zustand instead of useState in Signup page @done(25-08-13 19:11)
✔ Make CI/CD pipeline only for pushing it to dockerhub! @started(25-08-07 14:49) @done(25-08-07 18:11) @lasted(3h22m10s)

---BACKEND(SERVICES)---
✔ Make nginx-service for giving static files to frontend @done(25-06-16 18:04)
✔ Auth-service (C# ASP.NET Core) @started(25-06-18 19:18) @done(25-06-18 19:18) @lasted(5s)
✔ Make independent service for database for users @done(25-08-20 15:22)
☐ Make independent service for rewards for users.
☐ Make independent service for users-service for editting User data.
✔ When user is logged in, show user's name in navbar @done(25-06-25 13:42)
✔ Use Cookies for auth + I deleted localStorage and saving user's data in saved from XSS attacks auth-service by using HttpOnly Cookies! @done(25-06-25 13:42)
But now it doest show cookies(token) in browser!
✔ Make special "bruteforce" for: rushing /auth/login page and MYSQL database. @done(25-08-13 21:26)
☐ Ability do delete your account!(On backend and frontend)
☐ Add cash manager(Redis or inMemory)
  For training service and etc...(otherwise i'll do only for training service, dont know now!).
☐ Add logging for services
☐ Work with transactions(Databases)
☐ Add documentations with README.md files and Swagger(Or others for DX and documenting server logic!)
✔ Add API Gateway service! @done(25-08-23 18:45)
  For proxing the request, securing and etc...
☐ Add new service notification-service(GoLang)
  It will be my latest service! After all services.
☐ Add Two-Factor auth
✔ Delete cookie-service and collect cookie on the API-Gateway-Service side @done(25-08-25 20:51)
☐ Split big docker-compose.yaml file to micro files in other folders to make a search a bit better
  Create in others docker-compose.yaml files! NOT .yml - this is the main file!


After all I can touch thease tools to integrate:
---
☐ Add Excel or Word intergation when user would like to download and check his data or progress.
  ☐ Split service called metrica-service
    Integrate Prometheus and Grafana. Service will be wrote on FasAPI/Litestar Python.
☐ Create chat-service(python) with ML.
  As i have API key, i can integrate AI Chat support for example, for some types of users that cant understand something and they will have full support for 24/7.
  Gemini, Copilot, ChatGPT API Keys.
---

---FIXING BUGS---
✔ Problem with axios, gives error in axios.ts @done(25-06-18 20:53)
✔ useAuth, useSignup hooks do not make the request to auth-service! and give error! @done(25-06-18 20:53)
✔ Fix bug with colors on the page "/"! @done(25-07-30 20:27)
✔ Fix bug with logout when im reloading page the session still here! @done(25-08-04 17:45)
✔ The popup works only with new accounts. If i created it earlier it won't gonna be showed! @done(25-08-07 23:27)
✔ Fix bug with bugrer menu on /profile and /trainings page! Has some troubles with avatar, but needs to be writed fully! @done(25-08-20 20:48)
✔ Fix bug on /about-us page when user logged in, "Start Training" button redirects to /profile, not to /auth pages @done(25-08-20 21:03)
✔ Fix FROM START Navbar.tsx dark charka ui theme! @done(25-08-13 21:42)
✔ Fix bug with mobile menu on Navbar.tsx when it doesn't convert it to a links, stays like burger menu @done(25-08-20 20:47)
✔ Fix mobile menu on /trainings page(colors and links) @done(25-08-20 20:47)
✔ When registered, doesn't throw to main page(since i did the AGW service) @done(25-08-23 18:46)
☐ Delete logging from frontend side(in browser writes token and etc... at the end of the project)
☐ After bad parameters on login gives "Request failed with status code 401".
✔ Fix bug on / page when its mobile, old error with likns and avatar and colorscheme. @done(25-08-25 21:00)
☐ Bug on auth-db when user is not acitve, on database it's 1. But needs to be 0.


---FRONTED CONTAINER(Now it has a lot of errors, i'll get into it after"---

```
FROM node:18-alpine

WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .

CMD ["npm", "run", "dev"]
# Or in future to production:
# RUN npm run build
# CMD ["npm", "start"]

```

```
version: '3.9'

services:
  auth-db:
    container_name: auth-db
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: authdb
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf.d:/etc/mysql/conf.d
      - auth_db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 10s
      retries: 15
    networks:
      - auth-network

  auth-service:
    container_name: auth-service
    build: ./auth-service
    ports:
      - "5001:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=auth-db;Database=authdb;User=root;Password=root
      - JWT_SECRET=+6kiwPVT+4zRBK9fX0o5rPM+cM/Oz+ermezTkYs9D20=
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - auth-network

  frontend:
    container_name: frontend
    build: ../frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://auth-service:5000
    depends_on:
      - auth-service
    networks:
      - auth-network

  nginx-service:
    container_name: nginx-service
    build: ./nginx-service
    ports:
      - "80:80"
    volumes:
      - ./nginx-service/nginx-static:/usr/share/nginx/html
    depends_on:
      - auth-service
    networks:
      - auth-network

  guards-service:
    container_name: guards-service
    build: ./guards-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - GUARDS_SERVICE_PORT=3003
      - JWT_SECRET=your-secret-key-here
      - FRONTEND_URL=http://frontend:3000
      - AUTH_SERVICE_URL=http://auth-service:5000
    depends_on:
      - auth-service
    networks:
      - auth-network

  training-db:
    image: postgres:13
    container_name: training-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: trainingdb
    volumes:
      - training_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - auth-network

  training-service:
    container_name: training-service
    build: ./training-service
    ports:
      - "5002:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@training-db:5432/trainingdb
      - JWT_SECRET=your-secret-key-here
      - AUTH_SERVICE_URL=http://auth-service:5000
    depends_on:
      training-db:
        condition: service_healthy
    networks:
      - auth-network

networks:
  auth-network:
    driver: bridge

volumes:
  auth_db_data:
  training_db_data:

```
